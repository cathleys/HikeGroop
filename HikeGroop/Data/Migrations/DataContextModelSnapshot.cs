// <auto-generated />
using System;
using HikeGroop;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HikeGroop.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("HikeGroop.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("HikeGroop.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HikerType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("HikeGroop.Models.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("HikingCategory")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HikingTour")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ItineraryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("TrailClass")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ItineraryId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("HikeGroop.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("AppUserId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("HikeGroop.Models.Itinerary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DaysRequired")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Elevation")
                        .HasColumnType("TEXT");

                    b.Property<int>("HoursToSummit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JumpOffPoint")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeetUp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Itinerary");
                });

            modelBuilder.Entity("HikeGroop.Models.AppUser", b =>
                {
                    b.HasOne("HikeGroop.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("HikeGroop.Models.Destination", b =>
                {
                    b.HasOne("HikeGroop.Models.AppUser", "AppUser")
                        .WithMany("Destinations")
                        .HasForeignKey("AppUserId");

                    b.HasOne("HikeGroop.Models.Itinerary", "Itinerary")
                        .WithMany("Destinations")
                        .HasForeignKey("ItineraryId");

                    b.Navigation("AppUser");

                    b.Navigation("Itinerary");
                });

            modelBuilder.Entity("HikeGroop.Models.Group", b =>
                {
                    b.HasOne("HikeGroop.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("HikeGroop.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.Navigation("Address");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("HikeGroop.Models.AppUser", b =>
                {
                    b.Navigation("Destinations");
                });

            modelBuilder.Entity("HikeGroop.Models.Itinerary", b =>
                {
                    b.Navigation("Destinations");
                });
#pragma warning restore 612, 618
        }
    }
}
