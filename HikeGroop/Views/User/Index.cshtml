@using HikeGroop.ViewModels
@using HikeGroop.Data
@model IEnumerable<UserViewModel>
@{
    ViewData["Title"] = "Hikers";
}

<div class="album py-5 bg-light">
        <div class="container">

          <div class="row">
            @foreach(var item in Model)
            {

            <div class="col-md-4">
              <div class="card mb-4 box-shadow">
                <img class="card-img-top" src="@item.ProfileImageUrl" alt="Card image cap">
                <div class="card-body">
                  <p class="card-text">@item.UserName</p>
                  <p class="card-text">Hiker Type: @item.HikerType</p>
                  
                  <div class="d-flex justify-content-between align-items-center">
                    <div class="btn-group">
                      <a type="button" 
                      asp-controller="User"
                      asp-action="Detail"
                      asp-route-id="@item.Id"
                      class="btn btn-sm btn-outline-secondary">View</a>

                      @if(User.Identity.IsAuthenticated && User.IsInRole(UserRoles.Admin))
                      {
                      <a type="button" 
                      class="btn btn-sm btn-outline-secondary"
                      asp-controller="User"
                      asp-action="Edit"
                      asp-route-id="@item.Id"
                      >Edit</a>
                      <a type="button" class="btn btn-sm btn-outline-danger" 
                      asp-controller="User" 
                      asp-action="Delete" 
                      asp-route-id="@item.Id">
                      Delete</a>

                      }
                    </div>
                 
                  </div>
                </div>
              </div>
            </div>
            }

        </div>
   </div>
</div>
